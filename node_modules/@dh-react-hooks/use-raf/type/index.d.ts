declare type Arguments = {
    /** disable to call requestAnimationFrame at the first time */
    disable?: boolean;
    /** duration time to call requestAnimationFrame in milliseconed */
    duration: number;
    /** callback function to requestAnimationFrame */
    callback: (number: any) => void;
    /** run when the requestAnimationFrame ended (reach duration) */
    onFinish?: () => void;
};
declare type Result = {
    /** indicate whether the requestAnimationFrame executing */
    isActive: boolean;
    /** start function to execute requestAnimationFrame */
    start: () => void;
    /** stop function to cancel requestAnimationFrame */
    stop: () => void;
};
declare const useRequestAnimationFrame: ({ disable, duration, callback, onFinish }: Arguments) => Result;
export default useRequestAnimationFrame;
